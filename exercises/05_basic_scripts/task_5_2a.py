# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28  в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
network = input('Для нахождения адреса сети введите адрес хоста (пр. 192.168.12.8/17): ')
netmask = network.split('/')
ip = netmask[0]
mask = netmask[1]
ip = ip.split('.')
okt1, okt2, okt3, okt4 = int(ip[0]), int(ip[1]), int(ip[2]), int(ip[3])
ip_bin = f'{okt1:08b}{okt2:08b}{okt3:08b}{okt4:08b}'
ip_by_mask = ip_bin[0:int(mask)]+(32-int(mask))*'0'
mask_bin = int(mask)*'1'+(32-int(mask))*'0'
oktmask1, oktmask2, oktmask3, oktmask4 = mask_bin[0:8], mask_bin[8:16], mask_bin[16:24], mask_bin[24:32]
ipbm = ip_by_mask
okt1, okt2, okt3, okt4 = ipbm[0:8], ipbm[8:16], ipbm[16:24], ipbm[24:32]
print(f'''
Network:
{int(okt1, 2):<8} {int(okt2, 2):<8} {int(okt3, 2):<8} {int(okt4, 2):<8}
{okt1:<8} {okt2:<8} {okt3:<8} {okt4:<8}
Mask:
/{mask}
{int(oktmask1,2):<8} {int(oktmask2,2):<8} {int(oktmask3,2):<8} {int(oktmask4,2):<8}
{oktmask1:<8} {oktmask2:<8} {oktmask3:<8} {oktmask4:<8}''')
